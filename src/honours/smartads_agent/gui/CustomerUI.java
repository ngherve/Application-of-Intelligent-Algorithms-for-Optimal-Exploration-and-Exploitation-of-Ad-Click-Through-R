package honours.smartads_agent.gui;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.GridLayout;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.border.EmptyBorder;

import honours.smartads_agent.models.Graph;
import honours.smartads_agent.models.ItemAds;
import honours.smartads_agent.models.User;


public class CustomerUI extends JFrame {
	
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	//fields for frame items for user
	private JTextArea txtusrAds;
	private JScrollPane sctxt;
	private JLabel lblTitle;
	private JPanel pnltxt;
	private JPanel pnltop;
	private JButton btnViewItem;
	private Graph<User> usergraph;
	
	public CustomerUI(Graph<User> usergraph) {
		setTitle("Custumer UI");
		this.setUsergraph(usergraph);
		
		txtusrAds = new JTextArea();
		sctxt = new JScrollPane(txtusrAds);
		lblTitle = new JLabel();
		//setting up the panel
		pnltxt = new JPanel();
		pnltop = new JPanel();

		btnViewItem = new JButton("Click Here to View Item");
		
		btnViewItem.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				if(usergraph == null) {
					JOptionPane.showMessageDialog(null, "No Item selected!", "Warning", 
							JOptionPane.WARNING_MESSAGE);
				}else {
					ItemAds selad = null;
					String userName = JOptionPane.showInputDialog("Enter Your Name to View the Item");
					String AdSel = JOptionPane.showInputDialog("Enter Item's CODE");
					//txtusrAds.setText(viewInsightItemUsr(hCode));
					User us = findUser(userName);
					if(us == null) {
						AdvertiserUI.newUsers++;
						ArrayList<ItemAds> choosenItems = AdvertiserUI.userGraph.getAllVertices().
								iterator().next().getAdItems();
						ArrayList<ItemAds> adList = new ArrayList<>();
						
						for (int i = 0; i < choosenItems.size(); i++) {
							ItemAds ad = choosenItems.get(i);
							if(AdSel.equals(ad.getIdValue())) {
								ad.setSelIndex(1);
							} else {
								ad.setSelIndex(0);
							}
							adList.add(ad);
						}
						
						AdvertiserUI.userGraph.addVertex(new User(userName, 1, "NewUser" + AdvertiserUI.newUsers, 
									adList));
						for (ItemAds ad : choosenItems) {
							if(ad.getIdValue().equals(AdSel)) {
								selad = ad;
							}
						}
						if(selad != null) {
							selad.setSelIndex(1);
							txtusrAds.setText("");
							txtusrAds.append(selad.toString());	
						}
						System.out.println("Herve");
					} else {
						int numchoices = us.getNumChoices();
						us.setNumChoices(numchoices + 1);
						
						ArrayList<ItemAds> choosenItems = us.getAdItems();
						for (int i = 0; i < choosenItems.size(); i++) {
							ItemAds ad = choosenItems.get(i);
							if(AdSel.equals(ad.getIdValue())) {
								ad.setSelIndex(1);
								break;
							}
						}
						for (ItemAds ad : choosenItems) {
							if(ad.getIdValue().equals(AdSel)) {
								selad = ad;
							}
						}
						if(selad != null) {
							//selad.setSelIndex(1);
							txtusrAds.setText("");
							txtusrAds.append(selad.toString());	
						}
					}
				}
			}
		});
		
		
		lblTitle.setText("Customer Interface: Welcome user, Please select Items to View/purchase");
		lblTitle.setForeground(Color.black);
		pnltop.add(lblTitle, BorderLayout.NORTH);
		
		txtusrAds.setText("");
		txtusrAds.append(AdvertiserUI.viewAdInsight());	
		//pnlbtm.add(btnViewItem, BorderLayout.SOUTH);
		//adding items to the panel
		pnltxt.setLayout(new GridLayout(1,1));
		txtusrAds.setEditable(false);
		txtusrAds.setSize(240, 320);
		txtusrAds.setMargin(new Insets(10,10,10,10));
		pnltxt.add(sctxt);
		pnltxt.setBorder(new EmptyBorder(10,10,0,10));

		setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
		add(pnltop, BorderLayout.NORTH);
		add(pnltxt, BorderLayout.CENTER);
		add(btnViewItem, BorderLayout.SOUTH);
		setSize(450, 300);
		setLocationRelativeTo(null);
	}
	
	/**
	 * @param username
	 * @return
	 */
	private User findUser(String username) {
		User user = null;
		for(User us : AdvertiserUI.userGraph.getAllVertices()) {
			if(us.getUserName().toLowerCase().equals(username.toLowerCase())) {
				user = us;
			}
		}
		
		return user;
	}
	
	
	/**
	 * @param usergraph
	 * @return
	 */
	@SuppressWarnings("unused")
	private String display(Graph<User> usergraph) {
		String display = " List of Item to market advertisements \n\n";
		for(User a : usergraph.getAllVertices()) {
			
			display += ("Item Name: " + a.getUserName() + "Code: " + a.getUserID() + "\n"
			+ "Item Purchase code: " + a.getUserID() + "\n"
			+ "\n");
			//Display list on neighbors.
			ArrayList<String> neighbouringUsers = new ArrayList<>();
			for(User hos : usergraph.getNeighbors(a)) {
				neighbouringUsers.add(hos.toString());
			}
			for(String specHAds : neighbouringUsers) {
				display+=("\n"+specHAds+"\n");
			}
			display+=("\n");
		}
		return display;
	}

	/**
	 * @return the usergraph
	 */
	public Graph<User> getUsergraph() {
		return usergraph;
	}

	/**
	 * @param usergraph the usergraph to set
	 */
	public void setUsergraph(Graph<User> usergraph) {
		this.usergraph = usergraph;
	}
	
	/*
	private String viewInsightItemUsr(String itemcode) {
		ItemAds targetItem = null;
		String insight = "";
		for(ItemAds c : item.getAllVertices()) {
			String Code = c.getIdValue();
			if(Code.equals(itemcode)) {
				targetItem = c;
			}
		}
		if(targetItem != null) {
			if(targetItem.getIdValue().equals(itemcode)) {
				insight+=(targetItem.toString());
				insight+=("\n");
				insight+=("Similar Items: ");
				//Display list of partners for a specific country.
				for(ItemAds n : item.getNeighbors(targetItem)) {
					insight+=("\t"+n.getAdName()+"("+n.getAdDescrip()+") \n");
				}
				insight+=("\n");
				insight+=("Potential Items: \n");
				for(ItemAds n : item.getNeighbors(targetItem)) {
					//Display list of potential partners for a specific country(Partners of partner).
					for(ItemAds p : item.getNeighbors(n)) {
						//Exclude current country and its partners.
						if(p.compareTo(targetItem) != 0 ) {
							if(!item.isAdjacent(p, targetItem)) {
								insight+=("\t"+p.getAdName()+"("+p.getAdDescrip()+") \n");
							}
						}
					}
				}
				insight+=("\n\n");
			}else {
				JOptionPane.showMessageDialog(null, itemcode+" was not found.", "Search result", JOptionPane.INFORMATION_MESSAGE);
			}
		} else {
			JOptionPane.showMessageDialog(null, itemcode+" was not found.", "Search result", JOptionPane.INFORMATION_MESSAGE);
		}
		return insight;
	}*/
	
}
