/**
 * 
 */
package honours.smartads_agent.datareader;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;

import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.ChartUtilities;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;


import honours.smartads_agent.models.Graph;
import honours.smartads_agent.models.ItemAds;
import honours.smartads_agent.models.SinglyLinkedList;
import honours.smartads_agent.models.User;

/**
 * @author HERVE NG
 *
 */
public class UtilityObject {

	/**
	 * 
	 */
	public UtilityObject() {
		// TODO Auto-generated constructor stub
		
	}
	
	
	/**
	 * 
	 * This function extract user record from the file
	 * @param path of the file
	 * @return SinglyLinkedList Object of User with their selections
	 * 
	 */
	public static SinglyLinkedList<User> readFileGraph(String path) {
		SinglyLinkedList<User> userList = new SinglyLinkedList<User>();
		ArrayList<String> rows = new ArrayList<>();
		
		String rowData = "";
		String adsTitle = "";
		
		BufferedReader csvReader;
		try {
			csvReader = new BufferedReader(new FileReader(path));
			adsTitle = csvReader.readLine(); //getting the title ads
			while ((rowData = csvReader.readLine()) != null) {
			    if(!rowData.equals(adsTitle)) {
			    	rows.add(rowData);//reading the file input into string array
			    }
			}
			csvReader.close();
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		String[] AdNames = adsTitle.split(",");
		
		int numAds = File_Reader.NumAds(path); 
		
		for (int r = 0; r < rows.size(); r++) { //user record iteration
			int numSel = 0;
			ArrayList<ItemAds> userRecSel = new ArrayList<>();
			/*for (int c = 0; c < numAds; c++) {
				ItemAds ad = new ItemAds(AdNames[c], "This is ad number " + c, c, 0);
				userRecSel.add(ad); //initializing the selections to 0
			}*/
			for (int c = 0; c < numAds; c++) {
				int sel = File_Reader.readValue(rows, r, c);
				if(sel == 1) {
					numSel++;
				}
				ItemAds ad = new ItemAds(AdNames[c], "This is ad number " + c, "Ad" + c, sel);
				//ItemAds ad = new ItemAds(adName, adDescip, idValue, selInd)
				userRecSel.add(ad);
				//System.out.println(userRecSel.get(c).getSelIndex());
			}
			User us = new User("User " + r, numSel, "User" + r, userRecSel);
			userList.insert(us);
		}
		
		return userList;
	}
	
	/**
	 * @param userRecordList
	 * @return
	 */
	public static Graph<User> createUserItemGraph(SinglyLinkedList<User> userRecordList) {
		Graph<User> userGraph = new Graph<User>();
		for (User user : userRecordList) {
			userGraph.addVertex(user);
		}
		
		return userGraph;
	}
	
	/**
	 * @param graphRecord
	 * @param RecID
	 * @return
	 */
	public static String ViewGraphData(Graph<User> graphRecord, String RecID) {
		String result = "";
		User targetUs = null;
		for (User usRec : graphRecord.getAllVertices()) {
			String code = usRec.getUserID();
			if(code.equals(RecID)) {
				targetUs = usRec;
			}
		}
		
		result = targetUs.toString();
		result += "Ads Selected\n"; 
		for (ItemAds ad : targetUs.getAdItems()) {
			if(ad.getSelIndex() == 1) {
				result += "Code: " + ad.getIdValue() + "\tAd: " + ad.getAdName()
						+ "\tDescrip: " + ad.getAdDescrip();					
			}
		}
		return result;
	}
	
	/**
	 * @param dataset
	 * @param title
	 */
	public static void viewChartRepres(DefaultCategoryDataset dataset, String title) {
		JFreeChart chart = ChartFactory.createBarChart
				(title, "Iterations", "Average Rewards", dataset, 
						PlotOrientation.VERTICAL, false, true, false);
		ChartFrame frame1=new ChartFrame(title,chart);
		frame1.setVisible(true);
		frame1.setSize(640, 480);

		int width = 640;     //Width of the image 
		int height = 480;    //Height of the image  
		File lineChart = new File("data/" + title + ".jpeg"); 
		try {
			ChartUtilities.saveChartAsJPEG(lineChart, chart, width, height);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
}
